syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.ospreydcs.dp.grpc.v1.ingestion";

import "common.proto";

service DpIngestionService {
  rpc registerProvider (RegisterProviderRequest) returns (RegisterProviderResponse);
  rpc streamingIngestion (stream IngestionRequest) returns (stream IngestionResponse);
  rpc unaryIngestion (IngestionRequest) returns (IngestionResponse);
}

message RegisterProviderRequest {
  string providerName = 1;
  repeated Attribute attributes = 2;
  Timestamp requestTime = 3;
}

message RegisterProviderResponse {
  ResponseType responseType = 1;
  Timestamp responseTime = 2;
  RegisterProviderResponseDetails responseDetails = 3;
}

message RegisterProviderResponseDetails {
  oneof details_oneof {
    RegisterProviderDetails registerProviderDetails = 1;
    RejectDetails rejectDetails = 2;
  }
}

message RegisterProviderDetails {
  uint32 providerId = 1;
}

message IngestionRequest {
  uint32 providerId = 1;
  string clientRequestId = 2;
  Timestamp requestTime = 3;
  repeated Attribute attributes = 4;
  EventMetadata eventMetadata = 5;
  DataTable dataTable = 6;
}

message EventMetadata {
  Timestamp eventTimestamp = 1;
  string eventDescription = 2;
}

message DataTable {
  DataTimeSpec dataTimeSpec = 1;
  repeated Data columns = 2;
}

message DataTimeSpec {
  oneof value_oneof {
    TimestampIterator timestampIterator = 1;
    TimestampList timestampList = 2;
  }
}

message TimestampIterator {
  Timestamp startTime = 1;
  uint64 sampleIntervalNanos = 2;
  uint32 numSamples = 3;
}

message TimestampList {
  repeated Timestamp timestampValues = 1;
}

message IngestionResponse {
  uint32 providerId = 1;
  string clientRequestId = 2;
  ResponseType responseType = 3;
  Timestamp responseTime = 4;
  IngestionResponseDetails responseDetails = 5;
}

enum ResponseType {
  ACK_RESPONSE = 0;
  REJECT_RESPONSE = 1;
}

message IngestionResponseDetails {
  oneof details_oneof {
    AckDetails ackDetails = 1;
    RejectDetails rejectDetails = 2;
  }
}

message AckDetails {
  uint32 numRows = 1;
  uint32 numColumns = 2;
}

message RejectDetails {
  RejectReason reason = 1;
  string message = 2;
}

enum RejectReason {
  INVALID_REQUEST_REASON = 0;
}
