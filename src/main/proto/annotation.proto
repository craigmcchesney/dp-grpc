//
// annotation.proto
//
// Contains RPC messages and interface specific to the Annotation Service.
//
// since: February, 2024
// version: 1.3.0
//

syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.ospreydcs.dp.grpc.v1.annotation";

import "common.proto";


//
// ------------------- RPC Interfaces ---------------------------
//

/*
 * Annotation Service Interface
 *
 * Interface for annotating archived data.  Registered annotation authors can create and modify data
 * annotations.
 */
service DpAnnotationService {

  /*
   * createComment: Add a comment annotation to a DataSet.
   *
   * This RPC sends a request to the annotation service to create a comment annotation with the specified parameters.
   * The annotation service performs validation, and for a valid request, attempts to create the annotation.
   * The response may indicate rejection, an error in handling the request, or successful handling of the request.
   * See CreateAnnotationResponse for more details.
   */
  rpc createCommentAnnotation(CreateAnnotationRequest) returns (CreateAnnotationResponse);
}


//
// ------------------- Annotation Creation Request/Response ---------------------------
//

/*
 * Create Annotation Request.
 *
 * Contains details for adding an annotation to a DataSet with fields common to all requests for creating annotations,
 * plus a oneof field for details specific to each type of annotation that is supported.
 */
message CreateAnnotationRequest {

  uint32 authorId = 1; // required annotation author TODO: this will be replaced by userid in header when proper auth is enabled
  repeated string tags = 2; // optional tags/keywords
  repeated Attribute attributes = 3; // optional attributes (key/value pairs)
  DataSet dataSet = 4; // Specifies block of data to add comment to.

  // requestDetails: contains details specific to type of annotation to be created.
  oneof requestDetails {
    CreateCommentDetails createCommentDetails = 10;
  }

  message CreateCommentDetails {
    string	comment = 1;			// narrative comment text
  }
}

/*
 * Create Annotation Response.
 *
 * Contains details for response to request to add an annotation to a DataSet.  Intended to be used as the Response
 * type for all RPC methods to create annotations. ResponseType and corresponding message payloads include:
 *
 *     - ResponseType.REJECT_RESPONSE: Indicates request was rejected by service. Payload is RejectionDetails.
 *     - ResponseType.ERROR_RESPONSE: Indicates error was encountered processing the request. Payload is CreateAnnotationResult.ExceptionalResult.
 *     - ResposneType.SUMMARY_RESPOONSE: Indicates request was processed successfully. Payload is CreateAnnotationResult.ExceptionalResult.
 */
message CreateAnnotationResponse {

  ResponseType responseType = 1; // Indicates type of response as described above.
  Timestamp responseTime = 2; // Indicates time response was generated.

  // response: Response payload as described above.
  oneof response {
    CreateAnnotationResult createAnnotationResult = 10;
    RejectionDetails rejectionDetails = 11;
  }

  /*
   * Create Annotation Result.
   *
   * Contains the results of a request to add an annotation to a DataSet.
   */
  message CreateAnnotationResult {
    // result: Contains query result payload with either ExceptionalResult or SuccessfulResult as described above.
    oneof result {
      ExceptionalResult exceptionalResult = 1;
      SuccessfulResult successfulResult = 2;
    }

    /*
     * Exceptional Annotation Result.
     *
     * Used to describe the outcome of an annotation request that failed, such as an error in handling the request
     * Usage depends on the particular query RPC and is described elsewhere as appropriate.
     */
    message ExceptionalResult {

      StatusType statusType = 1; // Enum indicating the type of exceptional result.
      string statusMessage = 2; // Message with details about the exceptional result.

      enum StatusType {
        STATUS_ERROR = 0; // Indicates an error was encountered in handling the request.
      }
    }

    /*
 * Successful Annotation Result.
 *
 * Contains the results of a successful request to add an annotation to a DataSet.
 */
    message SuccessfulResult {
      uint64 annotationId = 1;
    }
  }
}


//
// ------------------- Annotation Data Model ---------------------------
//

/*
 * Standardized Identifier for Block of Archived Data
 *
 * A DataSet specifies archived data across multiple DataBlocks.  Each DataBlock specifies a time range and list of
 * data sources (columns/PVs).
 *
 */
message DataSet {
  repeated DataBlock dataBlocks = 1;
}

message DataBlock {
  Timestamp beginTime = 1; // Required, specifies beginning of time range for basis set.
  Timestamp endTime = 2; // Required, specifies end of time range for basis set.
  repeated string pvNames = 3; // Required, contains list of data source names for basis set.
}
