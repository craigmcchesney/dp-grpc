syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.ospreydcs.dp.grpc.v1.query";

import "common.proto";

service DpQueryService {
  rpc queryResponseSingle(QueryRequest) returns (QueryResponse);
  rpc queryResponseTable(QueryRequest) returns (QueryResponse);
  rpc queryResponseStream(QueryRequest) returns (stream QueryResponse);
  rpc queryResponseCursor(stream QueryRequest) returns (stream QueryResponse);
  rpc getColumnInfo(QueryRequest) returns (QueryResponse);
}

message QueryRequest {

  oneof request {
    QuerySpec querySpec = 1;
    CursorOperation cursorOp = 2;
    ColumnInfoQuerySpec columnInfoQuerySpec = 3;
  }

  message QuerySpec {
    Timestamp startTime = 1;
    Timestamp endTime = 2;
    repeated string columnNames = 3;
  }

  enum CursorOperation {
    CURSOR_OP_NEXT = 0;
  }

  message ColumnInfoQuerySpec {
    oneof columnNameSpec {
      ColumnNameList columnNameList = 1;
      ColumnNamePattern columnNamePattern = 2;
    }
    message ColumnNameList {
      repeated string columnNames = 1;
    }

    message ColumnNamePattern {
      string pattern = 1;
    }
  }
}

message QueryResponse {

  ResponseType responseType = 1;
  Timestamp responseTime = 2;

  oneof response {
    QueryReport queryReport = 10;
    RejectDetails queryReject = 11;
  }

  message QueryReport {

    oneof reportContent {
      QueryStatus queryStatus = 1;
      BucketData bucketData = 2;
      DataTable dataTable = 3;
      ColumnInfoList columnInfoList = 4;
    }

    message QueryStatus {
      QueryStatusType queryStatusType = 1;
      string statusMessage = 2;

      enum QueryStatusType {
        QUERY_STATUS_ERROR = 0;
        QUERY_STATUS_EMPTY = 1;
        QUERY_STATUS_NOT_READY = 2;
      }
    }

    message BucketData {
      repeated DataBucket dataBuckets = 1;
      message DataBucket {
        FixedIntervalTimestampSpec samplingInterval = 1;
        repeated Attribute attributes = 2;
        EventMetadata eventMetadata = 3;
        DataColumn dataColumn = 4;
      }
    }

    message ColumnInfoList {
      repeated ColumnInfo columnInfoList = 1;

      message ColumnInfo {
        string columnName = 1;
        string dataType = 2;
        uint64 samplingClock = 3;
        uint32 bucketSize = 4;
        Timestamp firstTime = 5;
        Timestamp lastTime = 6;
      }
    }
  }
}

